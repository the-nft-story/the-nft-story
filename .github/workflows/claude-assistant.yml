name: Claude Code Assistant

on:
  issues:
    types: [opened, labeled]
  issue_comment:
    types: [created]
  pull_request_review:
    types: [submitted]
  pull_request_review_comment:
    types: [created]

jobs:
  claude-assistant:
    name: Claude AI Assistant
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && contains(github.event.issue.labels.*.name, 'claude-help')) ||
      (github.event_name == 'issues' && contains(github.event.issue.labels.*.name, 'question'))

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup Foundry (if contracts involved)
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
        continue-on-error: true

      - name: Install contract dependencies
        working-directory: ./contracts
        run: forge install
        continue-on-error: true

      - name: Build contracts for context
        working-directory: ./contracts
        run: forge build
        continue-on-error: true

      - name: Claude Code Assistant
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          claude_args: |
            You are Claude Code assisting with "The NFT Story" - an educational Web3 project.

            ## Project Context
            - **Educational Focus**: Explain all decisions and provide learning context
            - **Smart Contract Platform**: Solidity contracts for on-chain storytelling
            - **Tech Stack**: Foundry, Next.js 14, wagmi/viem, Docker development
            - **Philosophy**: Radical decentralization, append-only arrays, fixed pricing

            ## Your Role
            When responding to @claude mentions:

            ### 1. Code Implementation
            - Follow TDD approach (explain test strategy first)
            - Explain design decisions before implementing
            - Present multiple approaches with trade-offs
            - Reference gas costs and security implications
            - Follow project guidelines in CLAUDE.md

            ### 2. Educational Support
            - Explain Web3 concepts and patterns
            - Discuss security considerations
            - Compare different implementation strategies
            - Reference industry best practices
            - Quiz understanding when appropriate

            ### 3. Code Review Assistance
            - Focus on educational value
            - Highlight learning opportunities
            - Explain vulnerability patterns
            - Suggest optimizations with reasoning
            - Reference Trail of Bits security guidelines

            ### 4. Debugging Help
            - Explain error messages in educational context
            - Provide step-by-step debugging approach
            - Teach debugging techniques
            - Reference relevant documentation

            ## Response Format
            - Start with a brief summary of what you'll help with
            - Provide educational context where relevant
            - Give practical, actionable solutions
            - End with follow-up questions or learning opportunities

            ## Available Tools
            You have access to the full codebase, can read/write files, run tests,
            and execute bash commands. Use these tools to provide comprehensive assistance.

            Remember: This is an educational project - prioritize learning over speed!

      - name: Add reaction to trigger comment
        uses: actions/github-script@v8
        if: github.event_name == 'issue_comment' || github.event_name == 'pull_request_review_comment'
        with:
          script: |
            const reaction = github.event_name === 'issue_comment'
              ? { comment_id: context.payload.comment.id }
              : { comment_id: context.payload.comment.id };

            await github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ...reaction,
              content: 'eyes'
            });

  claude-auto-help:
    name: Claude Auto Help Detection
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'issues' &&
       (contains(github.event.issue.title, 'help') ||
        contains(github.event.issue.title, 'question') ||
        contains(github.event.issue.title, 'how to') ||
        contains(github.event.issue.body, '@claude')))

    steps:
      - name: Auto-label for Claude assistance
        uses: actions/github-script@v8
        with:
          script: |
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['claude-help', 'question']
            });

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `ðŸ‘‹ I detected this might be a question or request for help!

              ðŸ¤– **Claude is standing by** to assist with:
              - Code implementation and debugging
              - Web3 and smart contract guidance
              - Educational explanations of concepts
              - Security and best practices advice

              ðŸ’¡ **To get Claude's help**: Just mention \`@claude\` in a comment with your specific question.

              ðŸŽ“ **Educational Project**: Claude will provide learning-focused explanations to help you understand Web3 development patterns.`
            });